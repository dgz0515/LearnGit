# note about git

## git仓库（本地）
1、分两部分：工作区（在仓库根目录中除了.git文件夹的所有文件及文件夹）、版本库（.git文件夹）。
2、工作区 里就是当前版本的所有文件及文件夹，工作区也是一个版本。
3、版本库 分两部分：暂存区、各个分支（
    暂存区：
    每次添加（$ git add ...）的内容都添加到暂存区；
    
    各个分支：
    提交（$ git commit -m "..."）的内容提交的当前分支里。
    
    版本库中有多个版本。
）


## 下载git（仅是Windows）
首先，从官网https://git-scm.com/downloads下载并安装git；
然后，在某一文件夹的空白处右键单击，找找Git Bash Here命令；
找到，说明安装成功；
成功之后，进行一些设置（
    $ git config --global user.name "Your Name"
    $ git config --global user.email "email@example.com"
    设置全局用户名和邮箱，这样所有的仓库都使用这个设置；
    
    $ git config user.name "Your Name"
    $ git config user.email "email@example.com"
    在去掉--global，并且在仓库根目录下，
    也可以为每个仓库设置各自的用户名和邮箱；
    
    $ git config --global user.name
    $ git config --global user.email
    查看全局设置的用户名和邮箱；
    
    $ git config --list
    查看所有设置。
    
    设置主要在本机用户主目录下的.gitconfig文件
    和仓库.git目录下的config文件里。
）


## 创建仓库
1、新建并进入一个空文件夹（
    $ mkdir learngit
    新建一个空文件夹
    $ cd learngit
    切换到文件夹路径下
    $ pwd
    显示一下当前路径
）
2、初始化仓库（
    $ git init
    初始化空文件夹为一个git仓库
    $ ls -ah
    显示仓库中的所有文件及文件夹
    $ ls
    显示仓库中的所有文件
）

## 管理仓库
1、添加文件到仓库中（
    $ git add 文件名1 文件名2 ...
    添加一个或多个文件，这里的文件并非是新建的，而是刚刚更新的，包括新建的，
    也可以连续多次add，对于某个文件的每次更新都可以add一次，可以连续多次，在暂存区会合并；
    
    $ git commit -m "关于这次提交的简要说明"
    将上述添加的更新文件提交到仓库中，并注明简要的提交说明；
）
2、检查仓库当前状态（
    $ git status
    查看仓库当前状态，从当前状态信息就可以看出是否有未添加和提交的已更新文件。
    可以知道刚刚更新的文件，未提交的文件等。
）
3、查看文件的更新（
    $ git diff 文件名
    当不知道文件的更新内容，可以查看。
    
    $ cat 文件名
    查看文件的当前内容
）
4、查看历史记录（
    $ git log
    查看历史操作记录。
    有添加、提交等信息。
    还有各个历史版本的id。
    
    HEAD指当前版本，HEAD^指上一个版本，HEAD^^指上上一个版本，...
    HEAD~100指上100个版本。
    
    $ git log --pretty=oneline
    使历史记录显示的紧凑型
    
    $ git reflog
    查看保存的历史记录，里面包含版本号，
    所以，要从老版本回到比较新的版本，就需要直到新版本的版本号。
）
5、版本回退（
    $ git reset --hard 版本号
    版本号 可以是 HEAD... 或者 一个存在的版本id
）
6、撤销更新（
    撤销工作区中的更新
    更新的文件还未添加到暂存区：
        可以更新文件到原来的版本，
        或者可以
        $ git checkout -- 文件名
            此文件还没有添加到暂存区过
            或者
            添加过，但又接着做了一些更新
            
            不管哪种，都
        把此文件回到最近一次add或commit时的状态。
    
    撤销暂存区中的更新
    更新的文件添加到暂存区了：
        $ git reset HEAD 文件名
        把暂存区中此文件的更新从暂存区撤到工作区，
        这时，仓库当前状态中此文件是有修改未添加提交的。

    只要是未commit的更新，都能挽回。
）
7、文件的删除与恢复（
    删除文件
    $ rm 文件名
    在工作区中把此文件删了，如果此文件从未提交到版本库中，则无法恢复此文件。
    
    彻底从版本库中删除文件
    $ git rm 文件名
    $ git commit -m "..."
    这样就把此文件从当前最新版本中删除。
    
    恢复误删的文件（当前最新版本中还有此文件）
    $ git checkout -- 文件名
    只能恢复到最新版本。
）
    


# note about github

## 注册登陆并设置SSH密钥（
    在https://github.com/官网注册账号，
    登陆，
    创建一个SSH密钥。
    
    创建SSH密钥：
    在本地用户目录下是否有.ssh文件夹，里面是否有id_rsa和id_rsa.pub文件；
    没有，则在git bash here输入
    $ ssh-keygen -t rsa -C "邮箱"
    然后，再次确认是否有那两个文件；
    有，则在GitHub账户的设置中创建SSH密钥，
    在Title设置一个密钥名，
    再把id_rsa.pub文件中的内容复制到Key里。
    
    id_rsa里面是私钥，id_rsa.pub里面是公钥。
    私钥不可泄漏。
    
    如果，想在多台主机使用一个GitHub账号的仓库，
    可以为每台主机在GitHub账号中创建SSH密钥。
）

## 
































